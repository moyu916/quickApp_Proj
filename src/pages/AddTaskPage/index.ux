<import name="my-card" src="./Card.ux"></import>
<import name="my-divider" src="apex-ui/components/divider/index"></import>
<import name="my-input" src="apex-ui/components/input/index"></import>
<import name="my-accordion" src="./accordion/index.ux"></import>
<import name="my-accordion-group" src="./accordion-group/index.ux"></import>
<import name="my-button" src="apex-ui/components/button/index"></import>

<import name="Calendar" src="./Calendar.ux"></import>

<template>
  <!-- template里只能有一个根节点 -->
  <div class="wrapper">

        <my-card>
          <div class="task">
            <div class="asr">
              <input id="task-input" onchange="handleTaskValue" value="{{eventName}}" placeholder="请输入或选择你的任务" style="width:100%; height: 150px; font-size:32px"></input>
            </div>
            
            <my-divider></my-divider>
            <div class="task-list">
              <div class="task-list-item" for="{{ tasks }}" >
                <text ontouchstart="handleAddTask($idx)" id="{{ $idx }}" style="color: {{ $item.checked ? 'red' :  ''}}" >{{ $item.name }}</text>
              </div>
            </div>
            <my-divider></my-divider>
            <my-accordion-group id="default"  onchange="handleChange">
              <my-accordion class="acc" group-id="default" title="更多常用任务" content="12点睡觉"></my-accordion>
            </my-accordion-group>
          </div>
        </my-card>

        <my-card>
          <div class="time">
            <Calendar onDate="handleDateValue" onTime="handleTimeValue"></Calendar>
          </div>
        </my-card>

        <my-card>
          <div slot="title">
            <text class="note">备注</text>
          </div>
          <div class="content">
            <my-input value="{{noteValue}}" onChange="handleNoteValue" placeholder="请输入备注内容" style="width:100%; height: 200px; font-size:30px"></my-input>
            <div class="img" ontouchstart="startAsr" ontouchend="endAsr"></div>
          </div>
        </my-card>

        <my-button type="success" ontap="tap" shape="round" size="small">确定</my-button>

  </div>
</template>

<script>
import router from '@system.router'
import storage from '@system.storage'
import asr from '@service.asr'
import vibrator from '@system.vibrator'
import dayjs from 'dayjs'

export default {
  data() {
    return {
      tasks: [
        { name: '背单词', checked: false },
        { name: '专业课', checked: false },
        { name: '画快题', checked: false },
        { name: '起床', checked: false },
        { name: '做阅读', checked: false },
        { name: '背政治', checked: false },
      ],
      formData: {
        task: '',
        startDate: {},
        endDate: {},
        time: '',
        note: ''
      }, 
      eventName: '',
      noteValue: ''
    }
  },

  onInit() {
    this.initAsr()
  },

  initAsr() {
    let that = this
    asr.init({
      fail: function () {
        that.$app.$def.makeToast('init failed!')
      }
    })
    asr.onpartialresult = ({ result }) => {
      this.noteValue = result
    }
    asr.oncompleteresult = ({ result }) => {
      this.noteValue = result.match(/\[(.*)\]/)[1]
    }
    asr.onerror = (error) => {
      this.text = `onerror: ${error}`
    }
  },
  startAsr() {
    let that = this
    asr.start({
      success: function () {
        //多调用几遍使震动明显一些
        vibrator.vibrate({ mode: 'short' })
        vibrator.vibrate({ mode: 'short' })
        vibrator.vibrate({ mode: 'short' })
      },
      fail: function (data, code) {
        that.noteValue = `start fail, code=${code}, data=${data}`
      }
    })
  },
  endAsr() {
    let that = this
    asr.stop({
      success: function () { },
      fail: function (data, code) {
        that.noteValue = `stop fail, code=${code}, data=${data}`
      }
    })
  },

  handleTaskValue(e) {
    // this.formData.task = e.detail.value
    // this.tasks.forEach((item) => item.checked = false)
    this.formData.task = e.text
  },


  handleDateValue(e) {
    this.formData.startDate = JSON.parse(e.detail.params).start;
    this.formData.endDate = JSON.parse(e.detail.params).end;
    // console.log(JSON.parse(e.detail.params))
  },

  handleTimeValue(e) {
    this.formData.time = e.detail.params
  },

  handleNoteValue(e) {
    this.formData.note = e.detail.value
  },

  dateToTimestamp(date) {
    let d = new Date(Number(date.year), Number(date.month-1), Number(date.day))
    return dayjs(d).unix()*1000
  },

  tap() {
    // console.log('form', this.formData)
    let tmp = {}

    const { task, startDate, endDate, time, note } = this.formData

    const start = this.dateToTimestamp(startDate)
    const end = this.dateToTimestamp(endDate)

    tmp.name = task
    tmp.time = time
    tmp.note = note
    tmp.date = [start, end]
    tmp.checked = false

    storage.get({
      key: 'totalTaskData',
      success: function(data) {
        let arr = JSON.parse(data)
        // console.log('arr', arr)
        arr.push(tmp)

        storage.set({
          key: 'totalTaskData',
          value: JSON.stringify(arr),
          success: function() {
                // storage.get({
                //   key: 'totalTaskData',
                //   success: function(data) {
                //     console.log('77777', JSON.parse(data))
                //   }
                // })

                router.push({
                  uri: '/pages/home',
                })
          }
        })
      }
    })
    
  },

  handleAddTask(idx) {
    // console.log('e', e)
    // console.log('v', e._target._attr.value)

    // this.tasks.forEach((item) => item.checked = false)
    // this.tasks[idx].checked = true

    this.eventName = this.tasks[idx].name
    this.formData.task = this.tasks[idx].name

  },


}
</script>

<style lang="less">
@import './../../assets/styles/style.less';

.wrapper {
  background-color: #f7f7f7;
  flex-direction: column;
  .title {
    padding: 20px;
  }
  .task {
    flex-direction: column;
    .asr {
      flex-direction: row;
      justify-content: space-around;
    }

  }

  .task-list {
    width: 100%;
    height: 180px;
    flex-direction: row;
    flex-wrap: wrap;
    justify-content: space-between;
    align-content: space-around;
    &-item{
      height: 65px;
      flex-basis: 200px;
      border: 1px solid #808080;
      border-radius: 50px;
      text{
        font-size: 30px;
        margin: 0 auto;
      }
    }    
  }

  .acc {
    flex-direction: column;
  }

  .content {
    /* flex-direction: row;
    justify-content: space-around; */
    .img {
      width: 50px;
      height: 50px;
      margin: 50px;
      flex-shrink: 0;
      background-image: url("../../assets/images/asr.png");
      float: right;
    }
  }
}
.demo{
  font-size: 100px;
}
.note{
  font-size: 35px;
  color: #1c2438;
}




</style>
